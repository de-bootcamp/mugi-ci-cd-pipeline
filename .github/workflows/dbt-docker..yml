name: Build docker image for dbt

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: dbt_demo
      IMAGE_TAG: latest
      DOCKERFILE: ./docker/Dockerfile
      CONTEXT: ./dbt

    steps:
      - name: Checkout Terraform repo
        uses: actions/checkout@v4
        with:
          repository: mugidavaatseren/db-terraform
          ref: main

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Ensure ECR repository exists
        env:
          REPO: ${{ env.ECR_REPOSITORY }}
        run: |
          aws ecr describe-repositories --repository-names "$REPO" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$REPO" --image-scanning-configuration scanOnPush=true

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tags
        id: tags
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPO: ${{ env.ECR_REPOSITORY }}
          TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "primary=${REGISTRY}/${REPO}:${TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.tags.outputs.primary }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
